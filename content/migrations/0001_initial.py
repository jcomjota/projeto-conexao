# Generated by Django 5.2.3 on 2025-06-28 17:44

import ckeditor.fields
import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Título')),
                ('subtitle', models.CharField(blank=True, max_length=300, verbose_name='Subtítulo')),
                ('media_type', models.CharField(choices=[('image', 'Imagem'), ('video', 'Vídeo')], default='image', max_length=10, verbose_name='Tipo de Mídia')),
                ('image', models.ImageField(blank=True, null=True, upload_to='banners/images/', verbose_name='Imagem')),
                ('video', models.FileField(blank=True, help_text='Formatos suportados: MP4, WEBM', null=True, upload_to='banners/videos/', verbose_name='Vídeo')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Ordem de Exibição')),
                ('primary_button_text', models.CharField(blank=True, max_length=50, verbose_name='Texto Botão Principal')),
                ('primary_button_url', models.URLField(blank=True, verbose_name='URL Botão Principal')),
                ('secondary_button_text', models.CharField(blank=True, max_length=50, verbose_name='Texto Botão Secundário')),
                ('secondary_button_url', models.URLField(blank=True, verbose_name='URL Botão Secundário')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Banner',
                'verbose_name_plural': 'Banners',
                'ordering': ['order', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EditablePage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page_type', models.CharField(choices=[('como_funciona', 'Como Funciona'), ('regras_gerais', 'Regras Gerais'), ('sobre', 'Sobre Nós'), ('termos', 'Termos e Condições'), ('privacidade', 'Política de Privacidade')], max_length=20, unique=True, verbose_name='Tipo de Página')),
                ('title', models.CharField(max_length=200, verbose_name='Título')),
                ('subtitle', models.CharField(blank=True, max_length=300, verbose_name='Subtítulo')),
                ('content', ckeditor.fields.RichTextField(verbose_name='Conteúdo')),
                ('meta_title', models.CharField(blank=True, max_length=60, verbose_name='Meta Título')),
                ('meta_description', models.CharField(blank=True, max_length=160, verbose_name='Meta Descrição')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('show_in_menu', models.BooleanField(default=True, verbose_name='Exibir no Menu')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Página Editável',
                'verbose_name_plural': 'Páginas Editáveis',
                'ordering': ['page_type'],
            },
        ),
        migrations.CreateModel(
            name='SiteConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_name', models.CharField(default='Conexão Adventure', max_length=100, verbose_name='Nome do Site')),
                ('site_description', models.TextField(blank=True, verbose_name='Descrição do Site')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Telefone')),
                ('whatsapp', models.CharField(blank=True, max_length=20, verbose_name='WhatsApp')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='E-mail')),
                ('address', models.TextField(blank=True, verbose_name='Endereço')),
                ('facebook_url', models.URLField(blank=True, verbose_name='Facebook')),
                ('instagram_url', models.URLField(blank=True, verbose_name='Instagram')),
                ('youtube_url', models.URLField(blank=True, verbose_name='YouTube')),
                ('contact_email', models.EmailField(blank=True, help_text='E-mail que recebe mensagens do formulário de contato', max_length=254, verbose_name='E-mail de Contato')),
                ('notification_email', models.EmailField(blank=True, help_text='E-mail que recebe notificações de novas inscrições', max_length=254, verbose_name='E-mail de Notificação')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='site/', verbose_name='Logo')),
                ('favicon', models.ImageField(blank=True, null=True, upload_to='site/', verbose_name='Favicon')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Configuração do Site',
                'verbose_name_plural': 'Configurações do Site',
            },
        ),
        migrations.CreateModel(
            name='StatisticCounter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nome')),
                ('value', models.PositiveIntegerField(verbose_name='Valor')),
                ('suffix', models.CharField(blank=True, help_text='Ex: +, k+, %, etc.', max_length=10, verbose_name='Sufixo')),
                ('icon', models.CharField(blank=True, help_text='Classe CSS do ícone FontAwesome', max_length=50, verbose_name='Ícone')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Ordem de Exibição')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Contador Estatístico',
                'verbose_name_plural': 'Contadores Estatísticos',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author_name', models.CharField(max_length=100, verbose_name='Nome do Autor')),
                ('author_city', models.CharField(blank=True, max_length=100, verbose_name='Cidade do Autor')),
                ('author_avatar', models.ImageField(blank=True, null=True, upload_to='testimonials/avatars/', verbose_name='Foto do Autor')),
                ('content', models.TextField(verbose_name='Conteúdo do Depoimento')),
                ('rating', models.PositiveIntegerField(default=5, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Avaliação (1-5 estrelas)')),
                ('adventure_date', models.DateField(blank=True, null=True, verbose_name='Data da Aventura')),
                ('adventure_title', models.CharField(blank=True, max_length=200, verbose_name='Título da Aventura')),
                ('source', models.CharField(choices=[('manual', 'Manual'), ('tripadvisor', 'TripAdvisor'), ('google', 'Google Reviews'), ('facebook', 'Facebook')], default='manual', max_length=20, verbose_name='Origem')),
                ('external_id', models.CharField(blank=True, help_text='ID do depoimento na plataforma externa', max_length=100, verbose_name='ID Externo')),
                ('external_url', models.URLField(blank=True, help_text='Link para o depoimento original', verbose_name='URL Externa')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('is_featured', models.BooleanField(default=False, verbose_name='Destacar')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Ordem de Exibição')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Depoimento',
                'verbose_name_plural': 'Depoimentos',
                'ordering': ['-is_featured', 'order', '-created_at'],
            },
        ),
    ]
